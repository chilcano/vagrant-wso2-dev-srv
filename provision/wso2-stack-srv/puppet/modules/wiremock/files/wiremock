#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          wiremock
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Service to Start up stopped services at server startup
# Description:       Deamon Service to Start up stopped services at server startup
### END INIT INFO

PRODUCT_CODE="wiremock"
USER="vagrant"
MOCK_SERVER_PORT="7788"
LOCK_FILE="/opt/${PRODUCT_CODE}/wiremock.lck"
MOCK_LOG_FILE="wiremock.log"
WIREMOCK_BUNDLE="wiremock-standalone-2.0.8-beta.jar"
CMD_START="cd /opt/${PRODUCT_CODE} ; java -jar $WIREMOCK_BUNDLE --port $MOCK_SERVER_PORT --verbose"
CMD_STOP="kill -9"
JAVA_HOME="/usr/java/latest"

export JAVA_HOME=$JAVA_HOME

# Status the service
status() {
  PID=`ps axww | grep 7788 | grep wiremock | grep -v grep | awk '{print $1}'`
  ps -fp $PID > /dev/null 2>&1
  PIDVAL=$?
  if [ $PIDVAL -eq 0 ]
    then
      echo "[$PRODUCT_CODE] server is running (pid "$PID")"
    else
      echo "[$PRODUCT_CODE] server is stopped (pid not found)"
  fi
  return $PIDVAL
}

# Start the service
start() {
  PID=`ps axww | grep 7788 | grep wiremock | grep -v grep | awk '{print $1}'`
  ps -fp $PID > /dev/null 2>&1
  PIDVAL=$?
  if [ $PIDVAL -eq 0 ]
    then
      echo "[$PRODUCT_CODE] server is running (pid "$PID")"
    else
      echo -n "[$PRODUCT_CODE] server starting ... "
      touch $LOCK_FILE
      su - $USER -c "$CMD_START > $MOCK_LOG_FILE 2>&1 &"
      sleep 5
      PID=`ps axww | grep 7788 | grep wiremock | grep -v grep | awk '{print $1}'`
      ps -fp $PID > /dev/null 2>&1
      PIDVAL=$?
      if [ $PIDVAL -eq 0 ]
        then
          echo "success (pid "$PID")"
        else
          echo "failure (pid "$PID")"
      fi
  fi
  return $PIDVAL
}


# Stop the service
stop() {
  PID=`ps axww | grep 7788 | grep wiremock | grep -v grep | awk '{print $1}'`
  ps -fp $PID > /dev/null 2>&1
  PIDVAL=$?
  if [ $PIDVAL -eq 0 ]
      then
         echo -n "[$PRODUCT_CODE] server ... "
         su - $USER -c "$CMD_STOP $PID > /dev/null 2>&1 &"
         rm -f $LOCK_FILE
         sleep 10
         PID=`ps axww | grep 7788 | grep wiremock | grep -v grep | awk '{print $1}'`
         ps -fp $PID > /dev/null 2>&1
         PIDVAL=$?
         if [ $PIDVAL -eq 0 ]
             then
                echo "failure (pid "$PID")"
                PIDVAL=2
             else
                echo "success (pid "$PID")"
                PIDVAL=0
         fi
      else
         echo "[$PRODUCT_CODE] server is not running (pid not found)"
         PIDVAL=0
  fi
  return $PIDVAL
}

### main logic ###
case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
status)
    status
    ;;
restart|reload)
    stop
    start
    ;;
*)
   echo $"Usage: $0 {start|stop|restart|reload|status}"
   exit 1
esac
exit $?